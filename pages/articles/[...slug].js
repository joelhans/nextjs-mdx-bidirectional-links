import Head from 'next/head'
import Link from 'next/link'
import { getFrontMatter, getSingleContent } from '@lib/mdx'
import { MDXLayoutRenderer } from '@components/MDXComponents'
import styles from '../../styles/Article.module.css'

import LinkData from '@data/links.json'

export async function getStaticPaths() {
  const posts = await getFrontMatter('./content/articles')
  const paths = posts.map(({ slug }) => ({
    params: {
      slug: slug.split('/'),
    }
  }))

  return {
    paths,
    fallback: false,
  }
}

export async function getStaticProps({ params: { slug } }) {
  const postSlug = slug.join('/')
  const content = await getSingleContent(postSlug)

  if (!content) {
    console.warn(`No content found for slug ${postSlug}`)
  }

  return { props: { content } }
}

export default function Article({ content }) {
  const { mdxSource, frontMatter } = content
  const { slug } = frontMatter

  // Filter `LinkData` to only the links that reference this page as the destination.
  const Refs = LinkData.filter((link) => link.dest.includes(slug))

  return (
    <>
      <div className="container">
        <Head>
          <title>{frontMatter.title}</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="main">
          <h1 className={styles.title}>{frontMatter.title}</h1>
          <article className={styles.article}>
            <MDXLayoutRenderer mdxSource={mdxSource} frontMatter={frontMatter} />
          </article>
          <div className={styles.refs}>
            <h2>Linked references: {Refs.length}</h2>
            <div className={styles.refGrid}>
              {Refs.length ? (
                Refs.map((link) => {
                  const { src, title, text } = link
                  return (
                    <Link
                      key={src}
                      href={src}
                    >
                      <a className={styles.ref}>
                        <h3 className={styles.refTitle}>{title}</h3>
                        <p className={``}>
                          {text}
                        </p>
                      </a>
                    </Link>
                  )
                })
              ) : (
                <p className="text-sm text-gray-500 !-mt-4 !m-0">
                  No linked references found.
                </p>
              )}
            </div>
          </div>
          <footer className={styles.back}>
            Head back{' '}
            <Link href="/">
              <a>
                  home
              </a>
            </Link>
            .
          </footer>
        </main>
      </div>
    </>
  )
}
